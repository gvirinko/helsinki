{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newItem","post","id","newData","put","delete","Filter","onChange","PersonForm","onChangeName","onChangeNumber","onClick","name","number","value","type","Notification","message","className","Persons","list","filter","useState","idToDelete","setIdToDelete","notificationType","setNotificationType","notificationMessage","setNotificationMessage","person","toLowerCase","includes","map","i","personToDelete","find","window","confirm","personService","catch","error","setTimeout","handleDelete","App","newName","setNewName","newNumber","setNewNumber","newFilterName","setFilterName","persons","setPersons","useEffect","initialList","event","preventDefault","target","length","item","alert","oldPerson","updPerson","newPerson","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba7f24bc.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getItems = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => response.data);\n}\n\nconst addItem = (newItem) => {\n    return axios\n        .post(baseUrl, newItem)\n        .then(response => response.data);\n}\nconst updateItem = (id, newData) => {\n    return axios\n        .put((`${baseUrl}/${id}`), newData)\n        .then(response => response.data);\n}\n\nconst deleteItem = (id) => {\n    return axios\n        .delete(`${baseUrl}/${id}`)\n}\n\nexport default { getItems, addItem, updateItem, deleteItem };","import React from 'react';\n\nconst Filter = ({ onChange }) => {\n    return <p>Filter by name: <input onChange={onChange} /></p>\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({ onChangeName, onChangeNumber, onClick, name, number }) => {\n    return (\n        <form>\n            <div>\n                Name: <input value={name} onChange={onChangeName} />\n            </div>\n            <div>\n                Number: <input value={number} onChange={onChangeNumber} />\n            </div>\n            <div>\n                <button type=\"submit\" onClick={onClick}>add</button>\n            </div>\n        </form>);\n}\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Notification = ({ type, message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n      <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, {useState} from 'react';\nimport personService from '../services/persons';\nimport Notification from './Notification';\n\nconst Persons = ({ list, filter }) => {\n    const [idToDelete, setIdToDelete] = useState(\"\");\n    const [notificationType, setNotificationType] = useState();\n    const [notificationMessage, setNotificationMessage] = useState('');\n\n    const handleDelete = (id) => {\n        // Deleting an item from state and server\n        const personToDelete = list.find(person => person.id === id);\n        if (window.confirm(`Delete ${personToDelete.name}?`)) {\n            setIdToDelete(id);\n            personService\n                .deleteItem(id)\n                .catch(error => {\n                    setNotificationMessage(`Information on ${personToDelete.name} has already been removed from server.`);\n                    setNotificationType(\"error\")\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000);\n                });\n        }\n    }\n    return (\n        <div>\n            <Notification type={notificationType} message={notificationMessage} />\n            {list.filter(person => person.id !== idToDelete)\n                 .filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n                 .map((person, i) =>\n                    <p key={i}>{person.name}: {person.number}\n                        <button onClick={() => handleDelete(person.id)}>Delete</button>\n                    </p>\n                )}\n        </div>)\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [newFilterName, setFilterName] = useState('');\n    const [persons, setPersons] = useState([]);\n    const [notificationMessage, setNotificationMessage] = useState();\n    const [notificationType, setNotificationType] = useState();\n\n\n\n    useEffect(() => {\n        // Getting data from server and saving to state\n        personService\n            .getItems()\n            .then(initialList => setPersons(initialList))\n            .catch(error => {\n                setNotificationMessage(\"No connection with server.\");\n                setNotificationType(\"error\");\n            });\n    }, []);\n\n    const addName = (event) => {\n        event.preventDefault();\n        // Checking the length constrains\n        if (newName.length < 3) {\n            setNotificationMessage(\"Name should have more than three characters.\");\n            setNotificationType(\"error\");\n            setTimeout(() => {\n                setNotificationMessage(null)\n            }, 5000);\n            setNewName(\"\");\n            setNewNumber(\"\");\n            return;\n        }\n        if (newNumber.length < 8) {\n            setNotificationMessage(\"Number should have more than eight characters.\");\n            setNotificationType(\"error\");\n            setTimeout(() => {\n                setNotificationMessage(null)\n            }, 5000);\n            setNewName(\"\");\n            setNewNumber(\"\");\n            return;\n        }\n        // Checking if the name and number already exist in the phonebook\n        if (persons.find(item => item.name === newName && item.number === newNumber) && newName !== \"\") {\n            window.alert(`${newName} is already added to the phonebook`);\n        }\n        // Checking if the name exists, but the number is different\n        else if (persons.find(item => item.name === newName && item.number !== newNumber) && newName !== \"\") {\n            if (window.confirm(`${newName} is already added to the phonebook, replace the old number with the new one?`)) {\n                // Updating the number to server and updating state\n                const oldPerson = persons.find(person => person.name === newName);\n                const updPerson = { ...oldPerson, number: newNumber };\n                personService\n                    .updateItem(oldPerson.id, updPerson)\n                    .then(updPerson => {\n                        setPersons(persons.map(person => person.id !== updPerson.id ? person : updPerson));\n                        setNewNumber(\"\");\n                    })\n                    .catch(error => {\n                        setNotificationMessage(\"An error occured.\");\n                        setNotificationType(\"error\");\n                    });\n            }\n        }\n        else {\n            const newObject = { name: newName, number: newNumber }\n            // Creating new item (name + number) in the phonebook, adding to state and sending to server\n            personService\n                .addItem(newObject)\n                .then(newPerson => {\n                    setPersons([...persons, newPerson]);\n                    setNotificationMessage(`Added ${newPerson.name}`);\n                    setNotificationType(\"success\");\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000);\n                    setNewName(\"\");\n                    setNewNumber(\"\");\n                })\n                .catch(error => {\n                    console.log(\"error shmerror\");\n                    setNotificationMessage(\"An error occured.\");\n                    setNotificationType(\"error\");\n                });\n        }\n    }\n\n    const handleChangeName = (event) => {\n        event.preventDefault();\n        setNewName(event.target.value);\n    }\n\n    const handleChangeNumber = (event) => {\n        event.preventDefault();\n        setNewNumber(event.target.value);\n    }\n\n    const handleFiltering = (event) => {\n        event.preventDefault();\n        setFilterName(event.target.value);\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification type={notificationType} message={notificationMessage} />\n            <Filter onChange={handleFiltering} />\n            <h3>Add a new entry:</h3>\n            <PersonForm\n                onChangeName={handleChangeName}\n                onChangeNumber={handleChangeNumber}\n                onClick={addName}\n                name={newName}\n                number={newNumber}\n            />\n            <h2>Numbers</h2>\n            <Persons list={persons} filter={newFilterName} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}